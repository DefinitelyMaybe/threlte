---
import type { Props } from '@astrojs/starlight/props'

import LanguageSelect from '@astrojs/starlight/components/LanguageSelect.astro'
import Search from '@astrojs/starlight/components/Search.astro'
import SiteTitle from '@astrojs/starlight/components/SiteTitle.astro'
import SocialIcons from '@astrojs/starlight/components/SocialIcons.astro'
// import ThemeSelect from '@astrojs/starlight/components/ThemeSelect.astro'

const { hasSidebar } = Astro.props
---

<div class="header sl-flex">
  <div class="title-wrapper sl-flex">
    <SiteTitle {...Astro.props} />
  </div>
  <div class="sl-flex">
    {
      hasSidebar && (
        <button class="package-nav cursor-pointer text-gray-300 hover:border-white hover:text-[#e5e7eb]">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="ellipsis mx-2 h-4 w-4"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M8.625 12a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Zm0 0H8.25m4.125 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Zm0 0H12m4.125 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Zm0 0h-.375M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
            />
          </svg>
          <p class="mr-2">Learn</p>
        </button>
      )
    }
    <Search {...Astro.props} />
  </div>
  <div class="sl-hidden md:sl-flex right-group">
    <div class="sl-flex social-icons">
      <SocialIcons {...Astro.props} />
    </div>
    <!-- <ThemeSelect {...Astro.props} /> -->
    <LanguageSelect {...Astro.props} />
  </div>
</div>

<style>
  .header {
    gap: var(--sl-nav-gap);
    justify-content: space-between;
    align-items: center;
    height: 100%;
  }

  .title-wrapper {
    /* Prevent long titles overflowing and covering the search and menu buttons on narrow viewports. */
    overflow: hidden;
  }

  .right-group,
  .social-icons {
    gap: 1rem;
    align-items: center;
  }
  .social-icons::after {
    content: '';
    height: 2rem;
    border-inline-end: 1px solid var(--sl-color-gray-5);
  }
  .package-nav {
    display: flex;
    align-items: center;
    border-radius: 0.375rem;
    flex-shrink: 0;
    margin-right: 1rem;
    background: transparent;
    border: 1px solid var(--sl-color-gray-5);
  }

  .ellipsis {
    color: var(--sl-icon-color);
  }

  @media (min-width: 800px) {
    /* .package-nav {
      display: none;
    }
    .package-nav-lg {
      display: flex;
    } */
  }

  @media (min-width: 50rem) {
    :global(:root[data-has-sidebar]) {
      --__sidebar-pad: calc(2 * var(--sl-nav-pad-x));
    }
    :global(:root:not([data-has-toc])) {
      --__toc-width: 0rem;
    }
    .header {
      --__sidebar-width: max(0rem, var(--sl-content-inline-start, 0rem) - var(--sl-nav-pad-x));
      --__main-column-fr: calc(
        (
            100% + var(--__sidebar-pad, 0rem) - var(--__toc-width, var(--sl-sidebar-width)) -
              (2 * var(--__toc-width, var(--sl-nav-pad-x))) - var(--sl-content-inline-start, 0rem) -
              var(--sl-content-width)
          ) / 2
      );
      display: grid;
      grid-template-columns:
        /* 1 (site title): runs up until the main content columnâ€™s left edge or the width of the title, whichever is the largest  */
        /* calc(var(--__sidebar-width) + max(0rem, var(--__main-column-fr) - var(--sl-nav-gap))) */
        minmax(
          calc(var(--__sidebar-width) + max(0rem, var(--__main-column-fr) - var(--sl-nav-gap))),
          auto
        )
        /* 2 (search box): all free space that is available. */
        1fr
        /* 3 (right items): use the space that these need. */
        auto;
      align-content: center;
    }
  }
</style>
